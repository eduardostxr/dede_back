// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        String   @id @default(uuid()) @db.VarChar(36)
  nome      String   @db.VarChar(60)
  email     String   @db.VarChar(60) @unique
  senha     String   @db.VarChar(60)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartas    Carta[]  @relation("ClienteCartas")
  propostas Proposta[]

  @@map("clientes")
}

model Nacionalidade {
  id     Int     @id @default(autoincrement())
  nome   String  @db.VarChar(30)
  cartas Carta[]

  @@map("nacionalidades")
}

model Carta {
  id              Int           @id @default(autoincrement())
  nome            String        @db.VarChar(60)
  velocidade      Int           @db.TinyInt
  fisico          Int           @db.TinyInt
  defesa          Int           @db.TinyInt
  chute           Int           @db.TinyInt
  passe           Int           @db.TinyInt
  drible          Int           @db.TinyInt
  overall         Int           @db.TinyInt
  anoNascimento   Int           @db.SmallInt
  preco           Decimal       @db.Decimal(10, 2)
  comercio        Boolean       @default(true)
  foto            String
  descricao       String?       @db.LongText
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  raridade        Raridade
  nacionalidade   Nacionalidade @relation(fields: [nacionalidadeId], references: [id])
  nacionalidadeId Int
  fotos           Foto[]
  cliente         Cliente?      @relation("ClienteCartas", fields: [clienteId], references: [id])
  clienteId       String?
  propostas       Proposta[]

  @@map("cartas")
}

model Foto {
  id         Int    @id @default(autoincrement())
  descricao  String @db.VarChar(30)
  codigoFoto String @db.LongText
  carta      Carta  @relation(fields: [cartaId], references: [id])
  cartaId    Int

  @@map("fotos")
}

model Proposta {
  id         Int          @id @default(autoincrement())
  cliente    Cliente      @relation(fields: [clienteId], references: [id])
  clienteId  String       @db.VarChar(36)
  carta      Carta        @relation(fields: [cartaId], references: [id])
  cartaId    Int
  descricao  String       @db.VarChar(255)
  resposta   String?      @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@map("propostas")
}

enum Raridade {
  BRONZE
  PRATA
  OURO
  LENDA
}
